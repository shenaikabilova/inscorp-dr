/**
 * 
 */
package inscorp;

import java.util.Date;
import java.util.List;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import dao_api.GrajdanskaOtgovornostDAO;
import dao_jdbc.GrajdanskaOtgovornostDAOImpl;
import model.GrajdanskaOtgovornost;

/**
 * @author shenaikabilova
 *
 */
public class GrajdanskaOtgovornostDAOImplTest {
	@SuppressWarnings("deprecation")
	private static GrajdanskaOtgovornost go = new GrajdanskaOtgovornost("000001", "000001", "Физическо лице", 
			"Иван", "Иванов", "Иванов", "8602020510", "Бългагия", "гр. Варна", 9000, "111222", "В8887АА", 
			"Зона IІ - Пловдив, Варна и Бургас", "Автомобил", "BG478965АА78952АA", "Ауди", "А5", 
			new Date(2016-1900, 7-1, 20), new Date(2017-1900, 7-1, 19), 12, 150, 150);
	private static GrajdanskaOtgovornostDAO dao = new GrajdanskaOtgovornostDAOImpl();
	
	@Before
	public void addBefore() {
		dao.insertGO(go);
	}
	
	@AfterClass
	public static void delAfterClass() {
		dao.deleteGO(go.getInsurenceGrajdanskaOtgovornostID());
	}

	@Test
	public void testListAllGO() {
		Assert.assertFalse(dao.listGO().isEmpty());
	}
	
	@Test
	public void testInsertGO() {
		dao.insertGO(go);
		
		Assert.assertEquals(go.getInsurerID(), dao.searchGO(go.getInsurenceGrajdanskaOtgovornostID()).getInsurerID());
		Assert.assertEquals(go.getInsurenceGrajdanskaOtgovornostID(), dao.searchGO(go.getInsurenceGrajdanskaOtgovornostID()).getInsurenceGrajdanskaOtgovornostID());
		Assert.assertEquals(go.getInsurenceType(), dao.searchGO(go.getInsurenceGrajdanskaOtgovornostID().getInsurenceType()));
		Assert.assertEquals(go.getInsurenceFirstName(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceSecondName(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceLastName(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceEGN(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceCountry(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceAddress(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurencePK(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceMobilePhone(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getVehicleRegNumber(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getZone(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getVehicleType(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getVehicleRama(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getVehicleBrand(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getVehicleModel(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceDateFrom(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceDateTo(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceMonths(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurenceValue(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
		Assert.assertEquals(go.getInsurencePremiq(), dao.searchGO(go.getinsurenceGrajdanskaOtgovornostID));
	}
	
	@Test
	public void testDeleteGO() {
		
	}
	
	@Test
	public void testUpdateGO() {
		
	}
	
	@Test
	public void testSearchGO() {
		
	}
	
	@Test
	public void testSearchGOByInsurer() {
		
	}
}